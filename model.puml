@startuml

abstract class NamedElement {
 + String name
}

class App

class Actuator {
  + int pin
}

class State {
}

class Action {
  + SIGNAL value
}

class Sensor {
  + int pin
}

class Transition {
  + List<Condition> conditions
  + State initialState
  + State nextState
}

class Condition {
  + Sensor sensor
  + SIGNAL value
}

enum SIGNAL {
    HIGH
    LOW
}


NamedElement <|-- App
NamedElement <|-- Actuator
NamedElement <|-- State
NamedElement <|-- Sensor
NamedElement <|-- Transition
NamedElement <|-- Condition

App *--> "1..*\nstates" State
App *--> "1..*\nactuators" Actuator
App *--> "1..*\nallTransitions" Transition
Transition --> Condition
Condition --> Sensor
Transition --> "nextState" State
Transition --> "initialState" State
State *--> "1..*\nactions" Action
Action --> "1 target" Actuator

@enduml
